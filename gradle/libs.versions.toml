[versions]
antlr = '4.7.1'
grpc = '1.32.1'
jackson = '2.12.2'
jmh = '1.32'
log4j = '2.14.1'
mockito = '3.12.4'
netty = '4.1.68.Final'
powermock = '2.0.9'
prometheus = '0.6.0'
protobuf = '3.13.0'
slf4j = '1.7.32'
testcontainers = '1.16.1'

[libraries]
antlr = { module = 'org.antlr:antlr4', version.ref = 'antlr' }
antlr-runtime = { module = 'org.antlr:antlr4-runtime', version.ref = 'antlr' }
apollo-client = 'com.ctrip.framework.apollo:apollo-client:1.8.0'
armeria = 'com.linecorp.armeria:armeria:1.12.0'

commons-beanutils = 'commons-beanutils:commons-beanutils:1.9.4'
commons-codec = 'commons-codec:commons-codec:1.11'
commons-dbcp = 'commons-dbcp:commons-dbcp:1.4'
commons-lang3 = 'org.apache.commons:commons-lang3:3.12.0'
commons-io = 'commons-io:commons-io:2.6'
commons-text = 'org.apache.commons:commons-text:1.4'
consul-client = 'com.orbitz.consul:consul-client:1.4.2'
curator-x-discovery = 'org.apache.curator:curator-x-discovery:4.3.0'
curator-test = 'org.apache.curator:curator-test:2.12.0'

flatbuffers-java = 'com.google.flatbuffers:flatbuffers-java:1.12.0'
freemarker = 'org.freemarker:freemarker:2.3.28'

groovy = 'org.codehaus.groovy:groovy:3.0.8'
graphql-java = 'com.graphql-java:graphql-java:8.0'
graphql-java-tools = 'com.graphql-java:graphql-java-tools:5.2.3'
grpc-core = { module = 'io.grpc:grpc-core', version.ref = 'grpc' }
grpc-grpclb = { module = 'io.grpc:grpc-grpclb', version.ref = 'grpc' }
grpc-netty = { module = 'io.grpc:grpc-netty', version.ref = 'grpc' }
grpc-protobuf = { module = 'io.grpc:grpc-protobuf', version.ref = 'grpc' }
grpc-stub = { module = 'io.grpc:grpc-stub', version.ref = 'grpc' }
gson = 'com.google.code.gson:gson:2.8.6'
guava = 'com.google.guava:guava:30.1.1-jre'

h2 = 'com.h2database:h2:1.4.196'
hc-httpclient = 'org.apache.httpcomponents:httpclient:4.5.13'
hc-httpcore-nio = 'org.apache.httpcomponents:httpcore-nio:4.4.13'
hikaricp = 'com.zaxxer:HikariCP:3.1.0'

influxdb-java = 'org.influxdb:influxdb-java:2.15'

jackson-databind = { module = 'com.fasterxml.jackson.core:jackson-databind', version.ref = 'jackson' }
jackson-module-afterburner = { module = 'com.fasterxml.jackson.module:jackson-module-afterburner', version.ref = 'jackson' }
javassist = 'org.javassist:javassist:3.25.0-GA'
jcl-over-slf4j = { module = 'org.slf4j:jcl-over-slf4j', version.ref = 'slf4j' }
jetcd-core = 'io.etcd:jetcd-core:0.5.3'
jetty-servlet = 'org.eclipse.jetty:jetty-servlet:9.4.40.v20210413'
jetty-server = 'org.eclipse.jetty:jetty-server:9.4.40.v20210413'
joda-time = 'joda-time:joda-time:2.10.5'

log4j-api = { module = 'org.apache.logging.log4j:log4j-api', version.ref = 'log4j' }
log4j-core = { module = 'org.apache.logging.log4j:log4j-core', version.ref = 'log4j' }

kafka-clients = 'org.apache.kafka:kafka-clients:2.4.1'
kubernetes-client-java = 'io.kubernetes:client-java:13.0.0'

mvel = 'org.mvel:mvel2:2.4.8.Final'

nacos-client = 'com.alibaba.nacos:nacos-client:1.4.2'
netty-codec = { module = 'io.netty:netty-codec', version.ref = 'netty' }
netty-codec-http = { module = 'io.netty:netty-codec-http', version.ref = 'netty' }
netty-codec-http2 = { module = 'io.netty:netty-codec-http2', version.ref = 'netty' }
netty-handler = { module = 'io.netty:netty-handler', version.ref = 'netty' }
netty-handler-proxy = { module = 'io.netty:netty-handler-proxy', version.ref = 'netty' }
netty-tcnative-boringssl-static = 'io.netty:netty-tcnative-boringssl-static:2.0.43.Final'

postgresql = 'org.postgresql:postgresql:42.2.18'
prometheus-simpleclient = { module = 'io.prometheus:simpleclient', version.ref = 'prometheus' }
prometheus-simpleclient_common = { module = 'io.prometheus:simpleclient_common', version.ref = 'prometheus' }
prometheus-simpleclient_hotspot = { module = 'io.prometheus:simpleclient_hotspot', version.ref = 'prometheus' }
protobuf-java = { module = 'com.google.protobuf:protobuf-java', version.ref = 'protobuf' }
protobuf-java-util = { module = 'com.google.protobuf:protobuf-java-util', version.ref = 'protobuf' }

slf4j-log4j12 = { module = 'org.slf4j:slf4j-log4j12', version.ref = 'slf4j' }
snakeyaml = 'org.yaml:snakeyaml:1.28'

vavr = 'io.vavr:vavr:0.10.3'

zipkin = 'io.zipkin.zipkin2:zipkin:2.9.1'

# Test Dependencies
test-awaitility = 'org.awaitility:awaitility:3.0.0'
test-assertj = 'org.assertj:assertj-core:3.21.0'
test-grpc-testing = { module = 'io.grpc:grpc-testing', version.ref = 'grpc' }
test-mockito-core = { module = 'org.mockito:mockito-core', version.ref = 'mockito' }
test-testestcontainers = { module = 'org.testcontainers:testcontainers', version.ref = 'testcontainers' }
test-testcontainers-elasticsearch = { module = 'org.testcontainers:elasticsearch', version.ref = 'testcontainers' }
test-powermock-module-junit4 = { module = 'org.powermock:powermock-module-junit4', version.ref = 'powermock' }
test-powermock-api-mockito2 = { module = 'org.powermock:powermock-api-mockito2', version.ref = 'powermock' }
test-jmh-generator-annprocess = { module = 'org.openjdk.jmh:jmh-generator-annprocess', version.ref = 'jmh' }
